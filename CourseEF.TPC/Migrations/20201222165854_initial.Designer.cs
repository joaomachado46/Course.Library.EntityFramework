// <auto-generated />
using System;
using CourseEF.TPC.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseEF.ClassLibrary.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20201222165854_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CourseEF.TPC.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Lingua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Editora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Andar")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPorta")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadeId");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnoLançamento")
                        .HasColumnType("int");

                    b.Property<int>("EditoraId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Género")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EditoraId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.LivroAutor", b =>
                {
                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.HasKey("LivroId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("LivroAutores");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Localidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Requisicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataDevoluçao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnType("datetime2");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int?>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Requisicoes");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AndarMoradia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CC")
                        .HasColumnType("int");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("MoradaRua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPorta")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadeId");

                    b.ToTable("Utentes");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Editora", b =>
                {
                    b.HasOne("CourseEF.TPC.Models.Localidade", "Localidade")
                        .WithMany("Editoras")
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidade");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Livro", b =>
                {
                    b.HasOne("CourseEF.TPC.Models.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editora");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.LivroAutor", b =>
                {
                    b.HasOne("CourseEF.TPC.Models.Autor", "Autor")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseEF.TPC.Models.Livro", "Livro")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Requisicao", b =>
                {
                    b.HasOne("CourseEF.TPC.Models.Livro", "Livro")
                        .WithMany("Requisicoes")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseEF.TPC.Models.Utente", "Utente")
                        .WithMany("Requisicoes")
                        .HasForeignKey("UtenteId");

                    b.Navigation("Livro");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Utente", b =>
                {
                    b.HasOne("CourseEF.TPC.Models.Localidade", "Localidade")
                        .WithMany("Utentes")
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidade");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Autor", b =>
                {
                    b.Navigation("LivrosAutores");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Editora", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Livro", b =>
                {
                    b.Navigation("LivrosAutores");

                    b.Navigation("Requisicoes");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Localidade", b =>
                {
                    b.Navigation("Editoras");

                    b.Navigation("Utentes");
                });

            modelBuilder.Entity("CourseEF.TPC.Models.Utente", b =>
                {
                    b.Navigation("Requisicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
